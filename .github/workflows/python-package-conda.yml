name: Build and Publish
on: [push]

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Add conda to system path
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          echo $CONDA/bin >> $GITHUB_PATH
        elif [ "$RUNNER_OS" == "Windows" ]; then
          echo $CONDA/Scripts >> $GITHUB_PATH
        elif [ "$RUNNER_OS" == "macOS" ]; then
          echo $CONDA/bin >> $GITHUB_PATH
        fi
      shell: bash
    
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
        conda install flake8 pytest
        pip install maturin
    
    - name: Build wheels
      run: |
        maturin build --release --target ${{ matrix.target }}
    
    - name: Run tests
      run: |
        pytest
    
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: target/wheels/*.whl

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist
          
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install --upgrade twine
          twine upload dist/**/*.whl
      
      - name: Publish to Conda
        env:
          ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          conda install conda-build anaconda-client
          # 为每个平台构建 conda 包
          for PLATFORM in linux-64 win-64 osx-64
          do
            conda build . --output-folder conda-bld/$PLATFORM
            anaconda -t $ANACONDA_TOKEN upload conda-bld/$PLATFORM/*/*.tar.bz2
          done
